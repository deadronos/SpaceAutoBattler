{
  "meta": {
    "generated": "2025-08-26T00:00:00Z",
    "source": "agent-memory-snapshot",
    "updated": "2025-08-26T00:08:57.485Z"
  },
  "nodes": [
    {
      "name": "GameState",
      "source": "src/types/index.ts",
      "summary": "Canonical GameState interface used across simulation and renderer; includes t, ships, bullets, assetPool (textures/sprites/effects), teamCounts, shipMap."
    },
    {
      "name": "config/entitiesConfig.ts",
      "source": "src/config/entitiesConfig.ts",
      "summary": "Defines ShipTypeCfg and CannonCfg; ShipConfig presets; SIZE_DEFAULTS; getShipConfig() normalizes cannon ranges; BULLET_DEFAULTS and PARTICLE_DEFAULTS."
    },
    {
      "name": "config/teamsConfig.ts",
      "source": "src/config/teamsConfig.ts",
      "summary": "TeamsConfig with teams and defaultFleet counts; generateFleetForTeam, makeInitialFleets, chooseReinforcements and chooseReinforcementsWithManagerSeed."
    },
    {
      "name": "config/assets/assetsConfig.ts",
      "source": "src/config/assets/assetsConfig.ts",
      "summary": "AssetsConfig with shapes2d, animations, svgAssets, turretDefaults and helpers getSpriteAsset/getVisualConfig/getEngineTrailConfig."
    },
    {
      "name": "test/vitest/setupTests.ts",
      "source": "test/vitest/setupTests.ts",
      "summary": "Vitest global setup using happy-dom and providing TextEncoder/TextDecoder and inline svgs via setup-inline-svgs; run before tests."
    },
    {
      "name": "test/vitest/assetpool_defaults.spec.ts",
      "source": "test/vitest/assetpool_defaults.spec.ts",
      "summary": "Ensures acquireSprite creates assetPool and releaseSprite places objects on freeList; uses minimal fake GameState."
    },
    {
      "name": "test/vitest/utils/stateFixture.ts",
      "source": "test/vitest/utils/stateFixture.ts",
      "summary": "makeDeterministicState(seed) fixture for deterministic tests using makeInitialState() and srand()."
    },
    {
      "name": "test/vitest/ship_movement.spec.ts",
      "source": "test/vitest/ship_movement.spec.ts",
      "summary": "Integration test verifying simulateStep increases ship velocity when throttle/accel are present."
    },
    {
      "name": "test/vitest/utils/glStub.ts",
      "source": "test/vitest/utils/glStub.ts",
      "summary": "GL and sprite stub helpers: makeGLStub(), makeSpriteFactory() for texture/sprite creation tracking."
    },
    {
      "name": "test/vitest/utils/poolAssert.ts",
      "source": "test/vitest/utils/poolAssert.ts",
      "summary": "Assertion helpers for pool tests: expectPoolMaxFreeList and expectDisposedAtLeast."
    },
    {
      "name": "test/vitest/setup-inline-svgs.ts",
      "source": "test/vitest/setup-inline-svgs.ts",
      "summary": "Inline SVG asset fixture injected into globalThis.__INLINE_SVG_ASSETS for tests."
    },
    {
      "name": "test/vitest/ai-range.spec.ts",
      "source": "test/vitest/ai-range.spec.ts",
      "summary": "AI range and engagement tests (target selection / range enforcement)."
    },
    {
      "name": "test/vitest/armor-shield.spec.ts",
      "source": "test/vitest/armor-shield.spec.ts",
      "summary": "Armor and shield interaction tests (damage, mitigation, regen)."
    },
    {
      "name": "test/vitest/ailogic.spec.ts",
      "source": "test/vitest/ailogic.spec.ts",
      "summary": "AI decision logic tests (evasive, targeting, thresholds)."
    },
    {
      "name": "test/vitest/asset_pool_integration.spec.ts",
      "source": "test/vitest/asset_pool_integration.spec.ts",
      "summary": "Integration tests for asset pooling across renderer and simulation boundaries."
    },
    {
      "name": "test/vitest/assets.spec.ts",
      "source": "test/vitest/assets.spec.ts",
      "summary": "AssetsConfig and asset helper tests (getSpriteAsset/getShipAsset/getBulletAsset)."
    },
    {
      "name": "test/vitest/assetpool_internal.spec.ts",
      "source": "test/vitest/assetpool_internal.spec.ts",
      "summary": "Internal asset pool unit tests for helpers and invariants."
    },
    {
      "name": "test/vitest/carrier-spawn.spec.ts",
      "source": "test/vitest/carrier-spawn.spec.ts",
      "summary": "Carrier spawn behavior and fighter spawn tests."
    },
    {
      "name": "test/vitest/deterministic-spawn.spec.ts",
      "source": "test/vitest/deterministic-spawn.spec.ts",
      "summary": "Deterministic spawn/fleet placement tests using seeded RNG."
    },
    {
      "name": "test/vitest/bullet_prev_property.spec.ts",
      "source": "test/vitest/bullet_prev_property.spec.ts",
      "summary": "Bullet prev property maintenance across simulation steps."
    },
    {
      "name": "test/vitest/attributes.spec.ts",
      "source": "test/vitest/attributes.spec.ts",
      "summary": "Entity attribute handling tests (hp, shield, armor)."
    },
    {
      "name": "test/vitest/shield-outline.spec.ts",
      "source": "test/vitest/shield-outline.spec.ts",
      "summary": "Shield outline rendering/data tests."
    },
    {
      "name": "test/vitest/shipmap_sync.spec.ts",
      "source": "test/vitest/shipmap_sync.spec.ts",
      "summary": "ShipMap synchronization tests between arrays and Map lookups."
    },
    {
      "name": "test/vitest/shipmap_formfleets.spec.ts",
      "source": "test/vitest/shipmap_formfleets.spec.ts",
      "summary": "Form fleets helper tests and shipMap population verification."
    },
    {
      "name": "test/vitest/rng-stream.spec.ts",
      "source": "test/vitest/rng-stream.spec.ts",
      "summary": "RNG streaming utilities deterministic behavior tests."
    },
    {
      "name": "test/vitest/renderer_coalesce.spec.ts",
      "source": "test/vitest/renderer_coalesce.spec.ts",
      "summary": "Renderer coalescing and draw-batching behavior tests."
    },
    {
      "name": "test/vitest/rendererflow.spec.ts",
      "source": "test/vitest/rendererflow.spec.ts",
      "summary": "Renderer pipeline flow integration tests."
    },
    {
      "name": "test/vitest/pool_stress.spec.ts",
      "source": "test/vitest/pool_stress.spec.ts",
      "summary": "Stress tests for pool allocation/releasing under load."
    },
    {
      "name": "test/vitest/pool_overflow.spec.ts",
      "source": "test/vitest/pool_overflow.spec.ts",
      "summary": "Pool overflow strategy tests (discard-oldest/grow/error)."
    },
    {
      "name": "test/vitest/pool_class.spec.ts",
      "source": "test/vitest/pool_class.spec.ts",
      "summary": "Tests for Pool class API and semantics."
    },
    {
      "name": "test/vitest/pooling.spec.ts",
      "source": "test/vitest/pooling.spec.ts",
      "summary": "General pooling integration tests (sprites/textures/effects)."
    },
    {
      "name": "test/vitest/texture_pool_error_strategy.spec.ts",
      "source": "test/vitest/texture_pool_error_strategy.spec.ts",
      "summary": "Texture pool overflow and error strategy tests."
    },
    {
      "name": "test/vitest/texture_pool_entry_disposer.spec.ts",
      "source": "test/vitest/texture_pool_entry_disposer.spec.ts",
      "summary": "Verifies disposers for texture pool entries are called during cleanup/trim."
    },
    {
      "name": "test/vitest/tintedSharedCanvas.spec.ts",
      "source": "test/vitest/tintedSharedCanvas.spec.ts",
      "summary": "Shared canvas tinting logic tests for renderer overlays."
    },
    {
      "name": "test/vitest/turret.spec.ts",
      "source": "test/vitest/turret.spec.ts",
      "summary": "Turret aiming, firing and origin offset tests."
    },
    {
      "name": "test/vitest/tintedHullPool.spec.ts",
      "source": "test/vitest/tintedHullPool.spec.ts",
      "summary": "Tinted hull pooling tests for team-colored hulls."
    },
    {
      "name": "test/vitest/tintedCache.spec.ts",
      "source": "test/vitest/tintedCache.spec.ts",
      "summary": "Tinted canvas/sprite cache behavior and eviction tests."
    },
    {
      "name": "test/vitest/turret_firing_origin.spec.ts",
      "source": "test/vitest/turret_firing_origin.spec.ts",
      "summary": "Turret firing origin computations tests."
    },
    {
      "name": "test/vitest/texture_pool_disposer.spec.ts",
      "source": "test/vitest/texture_pool_disposer.spec.ts",
      "summary": "Texture pool disposer invocation tests."
    },
    {
      "name": "test/vitest/texture_pool.spec.ts",
      "source": "test/vitest/texture_pool.spec.ts",
      "summary": "Core texture pool tests for allocation/freeing behavior."
    },
    {
      "name": "test/vitest/teamcounts.spec.ts",
      "source": "test/vitest/teamcounts.spec.ts",
      "summary": "Team counts caching and update tests."
    },
    {
      "name": "test/vitest/teamcolor.spec.ts",
      "source": "test/vitest/teamcolor.spec.ts",
      "summary": "Team color mapping and application tests."
    },
    {
      "name": "test/vitest/team-switch.spec.ts",
      "source": "test/vitest/team-switch.spec.ts",
      "summary": "Tests switching a ship's team and resulting state changes."
    },
    {
      "name": "test/vitest/types_barrel.spec.ts",
      "source": "test/vitest/types_barrel.spec.ts",
      "summary": "Types barrel re-export verification tests."
    },
    {
      "name": "test/vitest/svgRenderer_rasterize.spec.ts",
      "source": "test/vitest/svgRenderer_rasterize.spec.ts",
      "summary": "SVG rasterization correctness tests."
    },
    {
      "name": "test/vitest/svgRenderer_mru.spec.ts",
      "source": "test/vitest/svgRenderer_mru.spec.ts",
      "summary": "MRU cache behavior tests for SVG renderer."
    },
    {
      "name": "test/vitest/svgRenderer_cache.spec.ts",
      "source": "test/vitest/svgRenderer_cache.spec.ts",
      "summary": "SVG renderer cache lookup/eviction tests."
    },
    {
      "name": "test/vitest/svgLoader_teamcolors.spec.ts",
      "source": "test/vitest/svgLoader_teamcolors.spec.ts",
      "summary": "SVG loader team-color application tests."
    },
    {
      "name": "test/vitest/svgLoader_hullonly.spec.ts",
      "source": "test/vitest/svgLoader_hullonly.spec.ts",
      "summary": "SVG loader hull-only case tests."
    },
    {
      "name": "test/vitest/svgLoader_applyTeam.spec.ts",
      "source": "test/vitest/svgLoader_applyTeam.spec.ts",
      "summary": "Applying team color transforms during SVG load tests."
    },
    {
      "name": "test/vitest/sprite_effect_pooling.spec.ts",
      "source": "test/vitest/sprite_effect_pooling.spec.ts",
      "summary": "Pooling tests for small sprite effects and particles."
    },
    {
      "name": "test/vitest/spatialGrid.spec.ts",
      "source": "test/vitest/spatialGrid.spec.ts",
      "summary": "Spatial grid indexing and neighbor query tests."
    },
    {
      "name": "test/vitest/smoke_ai_simulation.spec.ts",
      "source": "test/vitest/smoke_ai_simulation.spec.ts",
      "summary": "Smoke/integration test for AI simulation scenarios."
    },
    {
      "name": "test/vitest/simulationflow.spec.ts",
      "source": "test/vitest/simulationflow.spec.ts",
      "summary": "Simulation step flow, tick ordering, and cleanup tests."
    },
    {
      "name": "test/vitest/shiptypes.spec.ts",
      "source": "test/vitest/shiptypes.spec.ts",
      "summary": "Ship type config validation and default application tests."
    },
    {
      "name": "test/vitest/pooled_factory.spec.ts",
      "source": "test/vitest/pooled_factory.spec.ts",
      "summary": "PooledFactory and makePooled factory tests."
    },
    {
      "name": "test/vitest/physics_acceleration.spec.ts",
      "source": "test/vitest/physics_acceleration.spec.ts",
      "summary": "Physics acceleration and integration math tests."
    },
    {
      "name": "test/vitest/maxspeed_fallback.spec.ts",
      "source": "test/vitest/maxspeed_fallback.spec.ts",
      "summary": "maxSpeed fallback guard tests (createShip)."
    },
    {
      "name": "test/vitest/svgRenderer_ttl.spec.ts",
      "source": "test/vitest/svgRenderer_ttl.spec.ts",
      "summary": "TTL eviction tests for SVG renderer cache."
    },
    {
      "name": "test/vitest/webgl_pooling.spec.ts",
      "source": "test/vitest/webgl_pooling.spec.ts",
      "summary": "WebGL pooling tests using glStub helpers."
    },
    {
      "name": "test/vitest/webglrenderer-texture.spec.ts",
      "source": "test/vitest/webglrenderer-texture.spec.ts",
      "summary": "WebGL renderer texture upload/delete semantics tests."
    },
    {
      "name": "test/vitest/viewport_scale.spec.ts",
      "source": "test/vitest/viewport_scale.spec.ts",
      "summary": "Viewport/display scale interaction tests."
    },
    {
      "name": "test/vitest/worker_snapshot_render.spec.ts",
      "source": "test/vitest/worker_snapshot_render.spec.ts",
      "summary": "Worker snapshot -> renderer integration tests."
    },
    {
      "name": "test/vitest/main.dispose.spec.ts",
      "source": "test/vitest/main.dispose.spec.ts",
      "summary": "Main module dispose/cleanup tests for renderer and pools."
    },
    {
      "name": "test/vitest/logicalmap.spec.ts",
      "source": "test/vitest/logicalmap.spec.ts",
      "summary": "Logical map partitioning tests."
    },
    {
      "name": "test/vitest/integration_team_color_pixel.spec.ts",
      "source": "test/vitest/integration_team_color_pixel.spec.ts",
      "summary": "Pixel-level integration test for team color correctness after rendering."
    },
    {
      "name": "test/vitest/gamemanager.spec.ts",
      "source": "test/vitest/gamemanager.spec.ts",
      "summary": "Game manager behavior tests (reinforcements, events, fallback positions)."
    },
    {
      "name": "test/vitest/gameflow.spec.ts",
      "source": "test/vitest/gameflow.spec.ts",
      "summary": "High-level game flow integration tests."
    },
    {
      "name": "test/vitest/flash_cleanup.spec.ts",
      "source": "test/vitest/flash_cleanup.spec.ts",
      "summary": "Flash/particle cleanup tests to avoid leaks."
    },
    {
      "name": "test/vitest/effect_coordinates.spec.ts",
      "source": "test/vitest/effect_coordinates.spec.ts",
      "summary": "Effect coordinate transform tests (world <-> local)."
    },
    {
      "name": "test/vitest/pooling/per_key_overflow.spec.ts",
      "source": "test/vitest/pooling/per_key_overflow.spec.ts",
      "summary": "Per-key overflow behavior tests for pools."
    },
    {
      "name": "test/vitest/integration/turret_render_integration.spec.ts",
      "source": "test/vitest/integration/turret_render_integration.spec.ts",
      "summary": "Turret renderer integration tests ensuring mountpoints and visuals align."
    },
    {
      "name": "test/playwright/ship-movement-debug.spec.js",
      "source": "test/playwright/ship-movement-debug.spec.js",
      "summary": "Playwright E2E/visual debug test for ship movement and screenshots."
    },
    {
      "name": "test",
      "source": "test",
      "summary": "this is just a test"
    }
  ]
}
