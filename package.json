{
  "name": "space-autobattler",
  "version": "0.1.0",
  "type": "module",
  "scripts": {
    "test": "vitest --environment jsdom",
    "serve": "http-server -c-1 -p 8080",
    "serve:dist": "http-server . -c-1 -p 8080",
    "build": "node ./scripts/build.mjs",
    "build-bundle": "node ./scripts/build.mjs",
    "build-standalone": "node ./scripts/build-standalone.mjs",
    "build-standalone:watch": "node ./scripts/build-standalone.mjs --watch",
    "test:e2e": "playwright test",
    "test:e2e:headed": "playwright test --headed",
    "test:playwright": "playwright test -c playwright.config.cjs",
    "typecheck": "tsc -p tsconfig.json --noEmit",
    "validate-config": "node -e \"(async()=>{const v=require('./src/config/validateConfig');const a=require('./src/config/assets/assetsConfig');const t=require('./src/config/teamsConfig');const p=require('./src/config/progressionConfig');const r=require('./src/config/rendererConfig'); const errs=[...v.validateAssetsConfig(a),...v.validateTeamsConfig(t.TeamsConfig),...v.validateProgressionConfig(p.progression),...v.validateRendererConfig(r)]; if(errs.length){console.error('Config validation failed:\n',errs.join('\n')); process.exit(2);} console.log('Config validation passed');})()\""
  },
  "devDependencies": {
    "@playwright/test": "^1.55.0",
    "@types/node": "^24.3.0",
    "@types/pixelmatch": "^5.2.6",
    "@types/pngjs": "^6.0.5",
    "c8": "^10.1.3",
    "esbuild": "^0.25.9",
    "eslint": "^9.34.0",
    "http-server": "^14.1.1",
    "husky": "^9.1.7",
    "jsdom": "^22.1.0",
    "lint-staged": "^16.1.5",
    "pixelmatch": "^5.3.0",
    "pngjs": "^6.0.0",
    "prettier": "^3.6.2",
    "typescript": "^5.9.2",
    "vitest": "^3.2.4",
    "viz.js": "^2.1.2",
    "@types/bun": "latest"
  },
  "private": true,
  "dependencies": {
    "opencode": "sst/opencode"
  },
  "trustedDependencies": [
    "opencode"
  ]
}
